{"ast":null,"code":"import imageCompression from 'browser-image-compression';\nexport const compressImage = async file => {\n  const options = {\n    maxSizeMB: 1,\n    // Compress to 1MB\n    maxWidthOrHeight: 1920,\n    // Maximum dimensions\n    useWebWorker: true\n  };\n  try {\n    const compressedFile = await imageCompression(file, options);\n    return compressedFile;\n  } catch (error) {\n    console.error('Error compressing image:', error);\n    throw error; // Re-throw for handling in the calling function\n  }\n};","map":{"version":3,"names":["imageCompression","compressImage","file","options","maxSizeMB","maxWidthOrHeight","useWebWorker","compressedFile","error","console"],"sources":["/home/rguktongole/Desktop/ideanexus/frontend/src/utils/imageCompression.js"],"sourcesContent":["import imageCompression from 'browser-image-compression';\n\nexport const compressImage = async (file) => {\n  const options = {\n    maxSizeMB: 1, // Compress to 1MB\n    maxWidthOrHeight: 1920, // Maximum dimensions\n    useWebWorker: true,\n  };\n\n  try {\n    const compressedFile = await imageCompression(file, options);\n    return compressedFile;\n  } catch (error) {\n    console.error('Error compressing image:', error);\n    throw error; // Re-throw for handling in the calling function\n  }\n};\n"],"mappings":"AAAA,OAAOA,gBAAgB,MAAM,2BAA2B;AAExD,OAAO,MAAMC,aAAa,GAAG,MAAOC,IAAI,IAAK;EAC3C,MAAMC,OAAO,GAAG;IACdC,SAAS,EAAE,CAAC;IAAE;IACdC,gBAAgB,EAAE,IAAI;IAAE;IACxBC,YAAY,EAAE;EAChB,CAAC;EAED,IAAI;IACF,MAAMC,cAAc,GAAG,MAAMP,gBAAgB,CAACE,IAAI,EAAEC,OAAO,CAAC;IAC5D,OAAOI,cAAc;EACvB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}