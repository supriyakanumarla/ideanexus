{"ast":null,"code":"var _jsxFileName = \"/home/rguktongole/Desktop/ideanexus/frontend/src/components/profilepage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfilePage = () => {\n  _s();\n  const [userId, setUserId] = useState(''); // Store the user ID\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [profilePicture, setProfilePicture] = useState('');\n  useEffect(() => {\n    // Fetch user ID from local storage or another source\n    const storedUserId = localStorage.getItem('userId');\n    if (storedUserId) {\n      setUserId(storedUserId);\n    }\n  }, []);\n  const handleUpdateProfile = () => {\n    if (!userId) {\n      console.error('User ID is missing');\n      return;\n    }\n    axios.put('http://localhost:5002/api/profile/update', {\n      userId,\n      // Include userId in the API request\n      name,\n      email,\n      profilePicture\n    }).then(response => {\n      console.log('Profile updated successfully:', response.data);\n      alert('Profile updated successfully');\n    }).catch(error => {\n      var _error$response;\n      console.error('Error updating profile:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      alert('Failed to update profile. Please try again.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Update Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Name\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Profile Picture URL\",\n      value: profilePicture,\n      onChange: e => setProfilePicture(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpdateProfile,\n      children: \"Update Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfilePage, \"cb5seVgd6GOMivMeiZ5x9NozwDI=\");\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ProfilePage","_s","userId","setUserId","name","setName","email","setEmail","profilePicture","setProfilePicture","storedUserId","localStorage","getItem","handleUpdateProfile","console","error","put","then","response","log","data","alert","catch","_error$response","message","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/rguktongole/Desktop/ideanexus/frontend/src/components/profilepage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst ProfilePage = () => {\n  const [userId, setUserId] = useState(''); // Store the user ID\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [profilePicture, setProfilePicture] = useState('');\n\n  useEffect(() => {\n    // Fetch user ID from local storage or another source\n    const storedUserId = localStorage.getItem('userId');\n    if (storedUserId) {\n      setUserId(storedUserId);\n    }\n  }, []);\n\n  const handleUpdateProfile = () => {\n    if (!userId) {\n      console.error('User ID is missing');\n      return;\n    }\n\n    axios\n      .put('http://localhost:5002/api/profile/update', {\n        userId, // Include userId in the API request\n        name,\n        email,\n        profilePicture,\n      })\n      .then((response) => {\n        console.log('Profile updated successfully:', response.data);\n        alert('Profile updated successfully');\n      })\n      .catch((error) => {\n        console.error('Error updating profile:', error.response?.data || error.message);\n        alert('Failed to update profile. Please try again.');\n      });\n  };\n\n  return (\n    <div>\n      <h1>Update Profile</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Name\"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n      />\n      <input\n        type=\"email\"\n        placeholder=\"Email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Profile Picture URL\"\n        value={profilePicture}\n        onChange={(e) => setProfilePicture(e.target.value)}\n      />\n      <button onClick={handleUpdateProfile}>Update Profile</button>\n    </div>\n  );\n};\n\nexport default ProfilePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}