{"ast":null,"code":"var _jsxFileName = \"/home/rguktongole/Desktop/ideanexus/frontend/src/components/profilepage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport '/home/rguktongole/Desktop/ideanexus/frontend/src/styles/profilepage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProfilePage = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [bio, setBio] = useState('');\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const navigate = useNavigate();\n\n  // Get userId from localStorage\n  const userId = localStorage.getItem('userId');\n  useEffect(() => {\n    if (!userId) {\n      // If no userId, redirect to login page\n      navigate('/login');\n    } else {\n      // Fetch user details from backend using userId\n      axios.get(`http://localhost:5002/api/users/${userId}`).then(response => {\n        setUser(response.data);\n        setBio(response.data.bio || ''); // Set bio from user data\n      }).catch(err => {\n        console.error('Error fetching user details:', err);\n        setError('Error fetching user details');\n      });\n    }\n  }, [navigate, userId]);\n  const handleUpdateProfile = async e => {\n    e.preventDefault();\n    if (!bio) {\n      setError('Bio cannot be empty');\n      return;\n    }\n    try {\n      const response = await axios.put(`http://localhost:5002/api/users/${userId}`, {\n        bio\n      });\n      setUser(response.data); // Update the user data in state\n      setSuccessMessage('Profile updated successfully!');\n      setError(''); // Reset error message on success\n    } catch (err) {\n      console.error('Error updating profile:', err);\n      setError('Error updating profile');\n      setSuccessMessage(''); // Reset success message on error\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-box\",\n      children: user ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [user.name, \"'s Profile\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Username:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 18\n            }, this), \" \", user.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 18\n            }, this), \" \", user.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bio-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Bio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: bio,\n            onChange: e => setBio(e.target.value),\n            placeholder: \"Write something about yourself...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleUpdateProfile,\n            className: \"btn-update-profile\",\n            children: \"Update Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"success-message fade-in\",\n          children: successMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 32\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message fade-in\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfilePage, \"+cATtYIyQ6PAag9ZbndzXV8DNhg=\", false, function () {\n  return [useNavigate];\n});\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","ProfilePage","_s","user","setUser","bio","setBio","error","setError","successMessage","setSuccessMessage","navigate","userId","localStorage","getItem","get","then","response","data","catch","err","console","handleUpdateProfile","e","preventDefault","put","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","username","email","value","onChange","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/rguktongole/Desktop/ideanexus/frontend/src/components/profilepage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport '/home/rguktongole/Desktop/ideanexus/frontend/src/styles/profilepage.css';\n\nconst ProfilePage = () => {\n  const [user, setUser] = useState(null);\n  const [bio, setBio] = useState('');\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const navigate = useNavigate();\n\n  // Get userId from localStorage\n  const userId = localStorage.getItem('userId');\n\n  useEffect(() => {\n    if (!userId) {\n      // If no userId, redirect to login page\n      navigate('/login');\n    } else {\n      // Fetch user details from backend using userId\n      axios\n        .get(`http://localhost:5002/api/users/${userId}`)\n        .then((response) => {\n          setUser(response.data);\n          setBio(response.data.bio || ''); // Set bio from user data\n        })\n        .catch((err) => {\n          console.error('Error fetching user details:', err);\n          setError('Error fetching user details');\n        });\n    }\n  }, [navigate, userId]);\n\n  const handleUpdateProfile = async (e) => {\n    e.preventDefault();\n    if (!bio) {\n      setError('Bio cannot be empty');\n      return;\n    }\n\n    try {\n      const response = await axios.put(\n        `http://localhost:5002/api/users/${userId}`,\n        { bio }\n      );\n\n      setUser(response.data); // Update the user data in state\n      setSuccessMessage('Profile updated successfully!');\n      setError(''); // Reset error message on success\n    } catch (err) {\n      console.error('Error updating profile:', err);\n      setError('Error updating profile');\n      setSuccessMessage(''); // Reset success message on error\n    }\n  };\n\n  return (\n    <div className=\"profile-container\">\n      <div className=\"profile-box\">\n        {user ? (\n          <>\n            <h2>{user.name}'s Profile</h2>\n            <div className=\"profile-info\">\n              <p><strong>Username:</strong> {user.username}</p>\n              <p><strong>Email:</strong> {user.email}</p>\n            </div>\n            <div className=\"bio-section\">\n              <h3>Bio</h3>\n              <textarea\n                value={bio}\n                onChange={(e) => setBio(e.target.value)}\n                placeholder=\"Write something about yourself...\"\n              />\n              <button onClick={handleUpdateProfile} className=\"btn-update-profile\">Update Profile</button>\n            </div>\n            {successMessage && <p className=\"success-message fade-in\">{successMessage}</p>}\n            {error && <p className=\"error-message fade-in\">{error}</p>}\n          </>\n        ) : (\n          <p>Loading...</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ProfilePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}