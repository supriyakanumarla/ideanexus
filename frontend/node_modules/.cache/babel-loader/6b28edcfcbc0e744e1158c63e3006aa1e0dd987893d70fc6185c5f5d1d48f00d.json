{"ast":null,"code":"var _jsxFileName = \"/home/rguktongole/Desktop/ideanexus/frontend/src/components/profilepage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport '/home/rguktongole/Desktop/ideanexus/frontend/src/styles/profilepage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfilePage = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [bio, setBio] = useState('');\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchUserDetails = async () => {\n      const userId = localStorage.getItem('userId'); // Retrieve userId from localStorage\n\n      if (!userId) {\n        setError('User ID is missing');\n        return;\n      }\n      try {\n        const response = await axios.get(`http://localhost:5002/api/users/${userId}`);\n        setUser(response.data);\n        setBio(response.data.bio || '');\n        setError('');\n      } catch (err) {\n        console.error('Error fetching user details:', err);\n        setError('Error fetching user details. Please try again.');\n      }\n    };\n    fetchUserDetails();\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n  const handleSaveBio = async () => {\n    const userId = localStorage.getItem('userId');\n    try {\n      await axios.put(`http://localhost:5002/api/users/${userId}`, {\n        bio\n      });\n      alert('Bio updated successfully');\n    } catch (err) {\n      console.error('Error updating bio:', err);\n      setError('Error updating bio. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome, \", user.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Email: \", user.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: bio,\n      onChange: e => setBio(e.target.value),\n      placeholder: \"Enter your bio here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSaveBio,\n      children: \"Save Bio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfilePage, \"oXnIrwCQ3CM9mcPtMNpr9Go3oMU=\");\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","ProfilePage","_s","user","setUser","bio","setBio","error","setError","fetchUserDetails","userId","localStorage","getItem","response","get","data","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleSaveBio","put","alert","name","email","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/rguktongole/Desktop/ideanexus/frontend/src/components/profilepage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport '/home/rguktongole/Desktop/ideanexus/frontend/src/styles/profilepage.css';\n\nconst ProfilePage = () => {\n  const [user, setUser] = useState(null);\n  const [bio, setBio] = useState('');\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchUserDetails = async () => {\n      const userId = localStorage.getItem('userId'); // Retrieve userId from localStorage\n\n      if (!userId) {\n        setError('User ID is missing');\n        return;\n      }\n\n      try {\n        const response = await axios.get(`http://localhost:5002/api/users/${userId}`);\n        setUser(response.data);\n        setBio(response.data.bio || '');\n        setError('');\n      } catch (err) {\n        console.error('Error fetching user details:', err);\n        setError('Error fetching user details. Please try again.');\n      }\n    };\n\n    fetchUserDetails();\n  }, []);\n\n  if (error) {\n    return <p className=\"error-message\">{error}</p>;\n  }\n\n  if (!user) {\n    return <p>Loading...</p>;\n  }\n\n  const handleSaveBio = async () => {\n    const userId = localStorage.getItem('userId');\n\n    try {\n      await axios.put(`http://localhost:5002/api/users/${userId}`, { bio });\n      alert('Bio updated successfully');\n    } catch (err) {\n      console.error('Error updating bio:', err);\n      setError('Error updating bio. Please try again.');\n    }\n  };\n\n  return (\n    <div className=\"profile-container\">\n      <h1>Welcome, {user.name}</h1>\n      <p>Email: {user.email}</p>\n      <textarea\n        value={bio}\n        onChange={(e) => setBio(e.target.value)}\n        placeholder=\"Enter your bio here\"\n      />\n      <button onClick={handleSaveBio}>Save Bio</button>\n    </div>\n  );\n};\n\nexport default ProfilePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}