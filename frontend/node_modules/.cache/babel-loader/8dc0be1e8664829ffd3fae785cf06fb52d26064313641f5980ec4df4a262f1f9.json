{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5002/api'; // API URL\n\n// Function to fetch the user profile\nexport const fetchUserProfile = async token => {\n  try {\n    const response = await axios.get(`${API_URL}/auth/profile`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data; // Return user data\n  } catch (error) {\n    var _error$response;\n    console.error('Error fetching user profile:', error);\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || 'Failed to fetch user profile.';\n  }\n};\n\n// Function to update user profile\nexport const updateUserProfile = async (token, userData) => {\n  try {\n    const response = await axios.put(`${API_URL}/auth/profile`, userData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data; // Return success message or updated data\n  } catch (error) {\n    var _error$response2;\n    console.error('Error updating user profile:', error);\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || 'Error updating profile.';\n  }\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","fetchUserProfile","token","response","get","headers","Authorization","data","error","_error$response","console","updateUserProfile","userData","put","_error$response2"],"sources":["/home/rguktongole/Desktop/ideanexus/frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5002/api'; // API URL\n\n// Function to fetch the user profile\nexport const fetchUserProfile = async (token) => {\n    try {\n        const response = await axios.get(`${API_URL}/auth/profile`, {\n            headers: { Authorization: `Bearer ${token}` },\n        });\n        return response.data; // Return user data\n    } catch (error) {\n        console.error('Error fetching user profile:', error);\n        throw error.response?.data || 'Failed to fetch user profile.';\n    }\n};\n\n// Function to update user profile\nexport const updateUserProfile = async (token, userData) => {\n    try {\n        const response = await axios.put(`${API_URL}/auth/profile`, userData, {\n            headers: { Authorization: `Bearer ${token}` },\n        });\n        return response.data; // Return success message or updated data\n    } catch (error) {\n        console.error('Error updating user profile:', error);\n        throw error.response?.data || 'Error updating profile.';\n    }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B,CAAC,CAAC;;AAE9E;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAOC,KAAK,IAAK;EAC7C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,OAAO,eAAe,EAAE;MACxDQ,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUJ,KAAK;MAAG;IAChD,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACZC,OAAO,CAACF,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAM,EAAAC,eAAA,GAAAD,KAAK,CAACL,QAAQ,cAAAM,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAI,+BAA+B;EACjE;AACJ,CAAC;;AAED;AACA,OAAO,MAAMI,iBAAiB,GAAG,MAAAA,CAAOT,KAAK,EAAEU,QAAQ,KAAK;EACxD,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAMP,KAAK,CAACiB,GAAG,CAAC,GAAGhB,OAAO,eAAe,EAAEe,QAAQ,EAAE;MAClEP,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUJ,KAAK;MAAG;IAChD,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAM,gBAAA;IACZJ,OAAO,CAACF,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAM,EAAAM,gBAAA,GAAAN,KAAK,CAACL,QAAQ,cAAAW,gBAAA,uBAAdA,gBAAA,CAAgBP,IAAI,KAAI,yBAAyB;EAC3D;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}